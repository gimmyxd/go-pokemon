---
name: ci

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      proto_ref:
      proto_sha:
  push:
    branches:
      - main
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for PRs
  pull_request:

env:
  BUF_REPO: "buf.build/gimmyxdd/pokemon"

  BUF_VERSION: 1.52.1
  BUF_BETA_SUPPRESS_WARNINGS: 1
  GO_VERSION: 1.24

  KOSLI_API_TOKEN: ${{ secrets.KOSLI_TOKEN }}
  KOSLI_ORG: gimmyxd
  FLOW_NAME: sdd-flow

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{secrets.GH_TOKEN}}
      -
        name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Setup buf
        uses: bufbuild/buf-action@v1
        with:
          version: ${{ env.BUF_VERSION }}
          setup_only: true
      -
        name: Delete generated code
        run: |
          rm -rf ./pokemon
      -
        name: Get latest version tag from Buf Registry
        id: buf-latest
        run: |
          echo "VERSION=$(buf registry module label list ${BUF_REPO} --format json | jq -r '.labels[0].name')" >> "$GITHUB_OUTPUT"
      -
        name: Buf Generate
        run: |
          echo "${{ env.BUF_REPO }}:${{ steps.buf-latest.outputs.VERSION }}"
          buf generate ${{ env.BUF_REPO }}:${{ steps.buf-latest.outputs.VERSION }}
      -
        name: Commit changes
        if: github.event_name == 'workflow_dispatch'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          add: 'pokemon'

      -
        name: setup kosli
        if: github.event_name == 'workflow_dispatch'
        uses: kosli-dev/setup-cli-action@v2
      -
        name: Kosli report proto artifact
        if: github.event_name == 'workflow_dispatch'
        run: |
          kosli attest artifact pokemon \
            --artifact-type dir \
            --name go-generated-bindings \
            --flow "${{ env.FLOW_NAME }}" \
            --trail "$(git rev-parse HEAD)" \
            --api-token "${{ env.KOSLI_API_TOKEN }}" \
            --org "${{ env.KOSLI_ORG }}"
